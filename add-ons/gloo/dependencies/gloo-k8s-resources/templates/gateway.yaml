apiVersion: gateway.solo.io/v1
kind: Gateway
metadata:
  name: gateway-proxy
  namespace: gloo-system
spec:
  bindAddress: '::'
  bindPort: 8080
  httpGateway:
    virtualServiceSelector:
      gateway-type: public # label set on the VirtualService
  useProxyProto: false
  proxyNames:
    - gateway-proxy # name of the Envoy proxy
  options:
    accessLoggingService:
      accessLog:
        - fileSink:
            jsonFormat:
              # HTTP method name
              httpMethod: '%REQ(:METHOD)%'
              # Protocol. Currently either HTTP/1.1 or HTTP/2.
              protocol: '%PROTOCOL%'
              # HTTP response code. Note that a response code of ‘0’ means that the server never sent the
              # beginning of a response. This generally means that the (downstream) client disconnected.
              responseCode: '%RESPONSE_CODE%'
              # Total duration in milliseconds of the request from the start time to the last byte out
              clientDuration: '%DURATION%'
              # Total duration in milliseconds of the request from the start time to the first byte read from the upstream host
              targetDuration: '%RESPONSE_DURATION%'
              # Value of the "x-envoy-original-path" header (falls back to "path" header if not present)
              path: '%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%'
              # Upstream cluster to which the upstream host belongs to
              upstreamName: '%UPSTREAM_CLUSTER%'
              # Request start time including milliseconds.
              systemTime: '%START_TIME%'
              # Unique tracking ID
              requestId: '%REQ(X-REQUEST-ID)%'
              acRequestHeaders: '%REQ(Access-Control-Request-Headers)%'
              acRequestMethod: '%REQ(Access-Control-Request-Method)%'
              tenantId: '%REQ(tenant-id)%'
              tenantUpstream: '%REQ(tenant-upstream)%'
              host: '%REQ(Host)%'
              origin: '%REQ(Origin)%'
              corsFilterState: '%FILTER_STATE(envoy.filters.http.cors)%'
              responseFlags: '%RESPONSE_FLAGS%'
              acRespAllowOrigin: '%RESP(access-control-allow-origin)%'
              acRespAllowCredentials: '%RESP(access-control-allow-credentials)%'
              acRespAllowMethods: '%RESP(access-control-allow-methods)%'
              acRespAllowHeaders: '%RESP(access-control-allow-headers)%'
            path: /dev/stdout
